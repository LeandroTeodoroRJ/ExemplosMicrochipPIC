//****************************************************************************
//                      EXEMPLO COM TECLADO 4X4
//****************************************************************************
//Compilador CCS PCWH Ver 4.104

#include <16F877.h>              //include do 16F628
#include <string.h>
#include <16f8x_registradores.h>//MAPEAMENTO DE MEÓRIA DOS REGISTRADORES
                                                    

//****************************************************************************
//                    CONFIGURAÇÕES DO COMPILADOR
//****************************************************************************

#use fast_io(a)                  //modo de entrada e saida de dados que
#use fast_io(b)                  //o compilador nao configura o tris

#use delay(clock=20000000)        //clock usual
#fuses HS,NOWDT,NOLVP,PUT,NOPROTECT

//#rom 0x2100={0b00010010,0x00}    //programa os primeiros dois endereços da eeprom
                                 

//****************************************************************************
//                                BIOS
//****************************************************************************
//****************************  ENTRADAS  ************************************
//PORTAS DO TECLADO
#define  tris_tec    tris_b   //indica qual o port do teclado
#define  port_tec    port_b

//*****************************  SAÍDAS  *************************************
#define  saida       port_d

//****************************************************************************
//                        CONSTANTES E VARIÁVEIS
//****************************************************************************
int   w_temp;
int   status_temp;
int   count;


//***************************************************************************
//                               DRIVES
//***************************************************************************
#include <teclado_4x4.h>



//****************************************************************************
//                       Rotinas da interrupcao
//****************************************************************************
//#inline                     //descomentar se for usar o in_line



//****************************************************************************
//                           INTERRUPÇÕES
//****************************************************************************
#int_global
void interrupcao(){
restart_wdt();
disable_interrupts(global);
#asm
movwf w_temp
swapf status,w
movwf status_temp
#endasm


//***************************************************************************
//                          FIM DA INTERRUPCAO
//***************************************************************************
enable_interrupts(global);
#asm
swapf status_temp,w
movwf status
swapf w_temp,f
swapf w_temp,w
#endasm
}

//****************************************************************************
//                             Sub-rotinas
//****************************************************************************
trata_tecla(){    
      if (key_trata){      
      saida = new_key;
      key_trata = false;
      }
}


//****************************************************************************
//                          Rotina Principal
//****************************************************************************

void main(){
//********************** CONFIGURAÇÕES INICIAIS *****************************
      setup_timer_0(rtcc_internal); //clock interno, prescaler 1:2
      setup_timer_1(t1_internal|t1_div_by_8); 
      setup_wdt(wdt_288ms);
      disable_interrupts(global);
      port_b_pullups(true);   //Ativa os pullups do port B    

//    Configuração do tris
//    Bit porta: 76543210
      tris_a = 0b00000000;
//      tris_b = 0b00000000;  //Definido no arquivo drive do teclado
      tris_c = 0b00000000;
      tris_d = 0b00000000;   
      tris_e = 0b00000000;
      

//******************** INICIALIZAÇÃO DE VARIÁVEIS ***************************
      key_trata = false;
      saida = 0;
//      delay_ms(500);
//      saida = 255;
//      delay_ms(500);
//****************************************************************************
//                             INICIO DO LOOP
//****************************************************************************
      while(1){  
      restart_wdt();
      scan_tec();       //Verifica se alguma tecla foi digitada.
      trata_tecla();    //Realiza o tratamento da tecla.
      }
//********************************* FIM **************************************
}


















































